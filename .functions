#!/bin/bash

# create a new directory and enter it
mkd() {
	mkdir -p "$@"
	cd "$@"
}

# clean docker shit
dclean() {
	docker rm -v $(docker ps -a -q -f status=exited) 2> /dev/null
	docker volume rm $(docker volume ls -qf dangling=true) 2> /dev/null
	docker rmi $(docker images -f "dangling=true" -q) 2> /dev/null
	docker volume rm $(docker volume ls -qf dangling=true) 2> /dev/null
}

# clean k8s evicted pods
k8sclean() {
    kubectl get pods | grep Evicted | awk '{print $1}' | xargs kubectl delete pod
}

# install k8s dashboard
k8sdash() {
	kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml
	kubectl proxy > /dev/null &
	cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kube-system
EOF
	sleep 5
	kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}')
}

# force delete k8s pod
k8sforcedel() {
	kubectl delete pod $@ --grace-period=0 --force
}

# delete evicted pods
k8sdelevicted() {
    kubectl get pods | grep Evicted | awk '{print $1}' | xargs kubectl delete pod
}

# clean local branches
dellocalbranches() {
	git fetch --prune
	git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv) | awk '{print $1}' | xargs git branch -D
}

# git add git commit git push to current branch
push() {
	b=$(git branch | grep \* | cut -d ' ' -f2)
	git add --all
	git commit -m "$@"
	git push origin $b
}

dev() {
	git fetch
	git checkout develop
	git pull origin develop
}

master() {
	git fetch
	git checkout master
	git pull origin master
}

tags() {
    git push origin master --tags
}

gomod() {
	GO111MODULE=on go mod $@
}

flushdns() {
	sudo killall -HUP mDNSResponder;sudo killall mDNSResponderHelper;sudo dscacheutil -flushcache
}

# switch gcloud config to personal config
home() {
    gcloud config configurations activate packagemain
}

work() {
    gcloud config configurations activate twelvetraitsi
}
